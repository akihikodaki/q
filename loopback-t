#!/usr/bin/env ruby
# frozen_string_literal: true

require 'shellwords'

Dir.chdir __dir__

class Host
  attr_reader :address

  def initialize(path, interface_device)
    @pid = spawn('./loopback-x', interface_device,
                 in: :close, out: path, err: [:child, :out], pgroup: 0)
  end

  def open_ssh(command, ...)
    IO.popen(['mkosi', 'ssh', command], ...)
  end

  def ssh(...)
    system('mkosi', 'ssh', ...)
  end

  def wait
    Process.wait @pid
  end
end

cases = if ARGV[0] == 'igb'
          [
            ['subject-helper', '/mnt/ltp.sh 0 ens2 ens1f0'],
            ['subject-subjectv0', '/mnt/ltp.sh 1 ens2 ens2v0'],
            ['subjectv0-helper', '/mnt/ltp.sh 1 ens2v0 ens1f0'],
            ['subjectv0-subject', '/mnt/ltp.sh 1 ens2v0 ens2'],
            ['subjectv0-subjectv1', '/mnt/ltp.sh 2 ens2v0 ens2v1'],
            ['dts', '/mnt/dts.sh']
          ]
        else
          [['subject-helper', '/mnt/ltp.sh 0 ens2 ens1f0']]
        end

results = File.join('var', 'results', Time.now.to_s)
Dir.mkdir results

cases.each do
  name, command = _1
  path = File.join(results, name)
  Dir.mkdir path

  host = Host.new(File.join(path, 'x.txt'), ARGV[0])
  begin
    begin
      host.ssh exception: true, in: :close
    rescue RuntimeError
      sleep 1
      retry
    end

    begin
      result = File.join(path, 'result.txt')
      File.open result, File::CREAT | File::WRONLY do |file|
        host.open_ssh "#{command} #{path}", err: [:child, :out] do |io|
          io.each do |line|
            puts "#{name}: #{line}"
            file.write line
          end
        end
      end
    ensure
      host.ssh 'poweroff', in: :close
    end
  ensure
    host.wait
  end
end
